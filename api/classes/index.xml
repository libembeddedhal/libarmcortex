<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Classes on libarmcortex docs</title><link>https://sjsu-dev2.github.io/libarmcortex/api/classes/</link><description>Recent content in Classes on libarmcortex docs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://sjsu-dev2.github.io/libarmcortex/api/classes/index.xml" rel="self" type="application/rss+xml"/><item><title>embed::cortex_m::dwt_counter</title><link>https://sjsu-dev2.github.io/libarmcortex/api/classes/classembed_1_1cortex__m_1_1dwt__counter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sjsu-dev2.github.io/libarmcortex/api/classes/classembed_1_1cortex__m_1_1dwt__counter/</guid><description>A counter with a frequency fixed to the CPU clock rate.</description></item><item><title>embed::cortex_m::dwt_counter::core_debug_registers_t</title><link>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1dwt__counter_1_1core__debug__registers__t/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1dwt__counter_1_1core__debug__registers__t/</guid><description>Structure type to access the Core Debug Register (CoreDebug)</description></item><item><title>embed::cortex_m::dwt_counter::dwt_registers_t</title><link>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1dwt__counter_1_1dwt__registers__t/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1dwt__counter_1_1dwt__registers__t/</guid><description>Structure type to access the Data Watchpoint and Trace Register (DWT).</description></item><item><title>embed::cortex_m::interrupt</title><link>https://sjsu-dev2.github.io/libarmcortex/api/classes/classembed_1_1cortex__m_1_1interrupt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sjsu-dev2.github.io/libarmcortex/api/classes/classembed_1_1cortex__m_1_1interrupt/</guid><description>Cortex M series interrupt controller.</description></item><item><title>embed::cortex_m::interrupt::irq_t</title><link>https://sjsu-dev2.github.io/libarmcortex/api/classes/classembed_1_1cortex__m_1_1interrupt_1_1irq__t/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sjsu-dev2.github.io/libarmcortex/api/classes/classembed_1_1cortex__m_1_1interrupt_1_1irq__t/</guid><description>represents an interrupt request number along with helper functions for setting up the interrupt controller registers.</description></item><item><title>embed::cortex_m::interrupt::nvic_register_t</title><link>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t/</guid><description>Structure type to access the Nested Vectored Interrupt Controller (NVIC)</description></item><item><title>embed::cortex_m::interrupt::scb_registers_t</title><link>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1interrupt_1_1scb__registers__t/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1interrupt_1_1scb__registers__t/</guid><description>Structure type to access the System Control Block (SCB).</description></item><item><title>embed::cortex_m::system_timer</title><link>https://sjsu-dev2.github.io/libarmcortex/api/classes/classembed_1_1cortex__m_1_1system__timer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sjsu-dev2.github.io/libarmcortex/api/classes/classembed_1_1cortex__m_1_1system__timer/</guid><description>SysTick driver for the ARM Cortex Mx series chips.</description></item><item><title>embed::cortex_m::system_timer::control_register</title><link>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1system__timer_1_1control__register/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1system__timer_1_1control__register/</guid><description>embed::cortex_m::system_timer::control_register Struct Reference
More&amp;hellip;
#include &amp;lt;system_timer.hpp&amp;gt;
Public Attributes Name constexpr auto enable_counter constexpr auto enable_interrupt constexpr auto clock_source constexpr auto count_flag Detailed Description struct embed::cortex_m::system_timer::control_register; Namespace containing the bitmask objects that are used to manipulate the ARM Cortex Mx SysTick Timer.
Public Attributes Documentation variable enable_counter static constexpr auto enable_counter = xstd::bitrange::from&amp;lt;0&amp;gt;(); When set to 1, takes the contents of the reload counter, writes it to the current_value register and begins counting down to zero.</description></item><item><title>embed::cortex_m::system_timer::registers</title><link>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1system__timer_1_1registers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sjsu-dev2.github.io/libarmcortex/api/classes/structembed_1_1cortex__m_1_1system__timer_1_1registers/</guid><description>Structure type to access the System Timer (SysTick).</description></item></channel></rss>