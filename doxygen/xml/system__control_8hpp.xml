<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="system__control_8hpp" kind="file" language="C++">
    <compoundname>system_control.hpp</compoundname>
    <includes local="no">array</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">libembeddedhal/config.hpp</includes>
    <includedby refid="interrupt_8hpp" local="yes">/github/workspace/include/libarmcortex/interrupt.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/github/workspace/include/libarmcortex/system_control.hpp</label>
        <link refid="system__control_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>array</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>libembeddedhal/config.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/github/workspace/include/libarmcortex/interrupt.hpp</label>
        <link refid="interrupt_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/github/workspace/include/libarmcortex/system_control.hpp</label>
        <link refid="system__control_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/github/workspace/include/libarmcortex/systick_timer.hpp</label>
        <link refid="systick__timer_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classembed_1_1cortex__m_1_1system__control" prot="public">embed::cortex_m::system_control</innerclass>
    <innerclass refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t" prot="public">embed::cortex_m::system_control::scb_registers_t</innerclass>
    <innernamespace refid="namespaceembed">embed</innernamespace>
    <innernamespace refid="namespaceembed_1_1cortex__m">embed::cortex_m</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libembeddedhal/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">embed::cortex_m<sp/>{</highlight></codeline>
<codeline lineno="15" refid="classembed_1_1cortex__m_1_1system__control" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classembed_1_1cortex__m_1_1system__control" kindref="compound">system_control</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t" kindref="compound">scb_registers_t</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1abb36782967ff1eefa1338460e3f35791" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1abb36782967ff1eefa1338460e3f35791" kindref="member">cpuid</ref>;</highlight></codeline>
<codeline lineno="24" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a0e85f97dbc6c6b9d624c7239801e13cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a0e85f97dbc6c6b9d624c7239801e13cf" kindref="member">icsr</ref>;</highlight></codeline>
<codeline lineno="26" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1aa92ddf010c733000fca186329fe18c94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>intptr_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1aa92ddf010c733000fca186329fe18c94" kindref="member">vtor</ref>;</highlight></codeline>
<codeline lineno="28" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a256079b738e00bfa25137114c9f6ad73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a256079b738e00bfa25137114c9f6ad73" kindref="member">aircr</ref>;</highlight></codeline>
<codeline lineno="30" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1af84f214f4ba4710d4fb5c1ec2bff670b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1af84f214f4ba4710d4fb5c1ec2bff670b" kindref="member">scr</ref>;</highlight></codeline>
<codeline lineno="32" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a6f0c9372403396c3f8c0c1dfba527932" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a6f0c9372403396c3f8c0c1dfba527932" kindref="member">ccr</ref>;</highlight></codeline>
<codeline lineno="34" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1add246ee559bbe3b0b2b4ec7b6cbb60cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;volatile<sp/>uint8_t,<sp/>12U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1add246ee559bbe3b0b2b4ec7b6cbb60cd" kindref="member">shp</ref>;</highlight></codeline>
<codeline lineno="36" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a9cd9416fdcd99a3ea425326dcccb2544" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a9cd9416fdcd99a3ea425326dcccb2544" kindref="member">shcsr</ref>;</highlight></codeline>
<codeline lineno="38" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a14daa81a54b958e26aee06826e66a6ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a14daa81a54b958e26aee06826e66a6ec" kindref="member">cfsr</ref>;</highlight></codeline>
<codeline lineno="40" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a681dc64defc325a874b97ffd6e9606a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a681dc64defc325a874b97ffd6e9606a6" kindref="member">hfsr</ref>;</highlight></codeline>
<codeline lineno="42" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a4ea127da48a3148c0ad39b1529302bbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a4ea127da48a3148c0ad39b1529302bbc" kindref="member">dfsr</ref>;</highlight></codeline>
<codeline lineno="44" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a5ad13b6b83da21f6310eba8eeac933cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a5ad13b6b83da21f6310eba8eeac933cb" kindref="member">mmfar</ref>;</highlight></codeline>
<codeline lineno="46" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a19fb7cb4de0219319614a311061d863c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a19fb7cb4de0219319614a311061d863c" kindref="member">bfar</ref>;</highlight></codeline>
<codeline lineno="48" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a5533302d0b6ce45f96a0d2f2cb0d61e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a5533302d0b6ce45f96a0d2f2cb0d61e9" kindref="member">afsr</ref>;</highlight></codeline>
<codeline lineno="50" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1ac61b1942f0b09b00ede865b45864139f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;volatile<sp/>uint32_t,<sp/>2U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1ac61b1942f0b09b00ede865b45864139f" kindref="member">pfr</ref>;</highlight></codeline>
<codeline lineno="52" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a8ec8cc61e8d82f662d653b0de241a35b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a8ec8cc61e8d82f662d653b0de241a35b" kindref="member">dfr</ref>;</highlight></codeline>
<codeline lineno="54" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a37be597712bd313f64cd6ea17ed2b027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a37be597712bd313f64cd6ea17ed2b027" kindref="member">adr</ref>;</highlight></codeline>
<codeline lineno="56" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1af5c26f7d05b4bc7d7e7303158d5b6cc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;volatile<sp/>uint32_t,<sp/>4U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1af5c26f7d05b4bc7d7e7303158d5b6cc3" kindref="member">mmfr</ref>;</highlight></codeline>
<codeline lineno="58" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a07d66193d30205cfe6d8a5e3e7687686" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;volatile<sp/>uint32_t,<sp/>5U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a07d66193d30205cfe6d8a5e3e7687686" kindref="member">isar</ref>;</highlight></codeline>
<codeline lineno="60" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1aa01026c45b73a0ccebcf22398b97a9eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;uint32_t,<sp/>5U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1aa01026c45b73a0ccebcf22398b97a9eb" kindref="member">reserved0</ref>;</highlight></codeline>
<codeline lineno="62" refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a8cd8ad73da97eec2f0dc6c444a56732e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t_1a8cd8ad73da97eec2f0dc6c444a56732e" kindref="member">cpacr</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classembed_1_1cortex__m_1_1system__control_1a10225a8f0d3ee88bd40c094e40e0f52c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>intptr_t<sp/><ref refid="classembed_1_1cortex__m_1_1system__control_1a10225a8f0d3ee88bd40c094e40e0f52c" kindref="member">scb_address</ref><sp/>=<sp/>0xE000&apos;ED00UL;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classembed_1_1cortex__m_1_1system__control_1afdee24068c81f3c4b47849ae7f8db67b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/><ref refid="classembed_1_1cortex__m_1_1system__control_1afdee24068c81f3c4b47849ae7f8db67b" kindref="member">scb</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(embed::is_a_test())<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t" kindref="compound">scb_registers_t</ref><sp/>dummy_scb{};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;dummy_scb;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structembed_1_1cortex__m_1_1system__control_1_1scb__registers__t" kindref="compound">scb_registers_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classembed_1_1cortex__m_1_1system__control_1a10225a8f0d3ee88bd40c094e40e0f52c" kindref="member">scb_address</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82" refid="classembed_1_1cortex__m_1_1system__control_1aa3a8ac3d0826d7aabfb8114912579ec3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1system__control_1aa3a8ac3d0826d7aabfb8114912579ec3" kindref="member">initialize_floating_point_unit</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classembed_1_1cortex__m_1_1system__control_1afdee24068c81f3c4b47849ae7f8db67b" kindref="member">scb</ref>()-&gt;cpacr<sp/>=<sp/><ref refid="classembed_1_1cortex__m_1_1system__control_1afdee24068c81f3c4b47849ae7f8db67b" kindref="member">scb</ref>()-&gt;cpacr<sp/>|<sp/>((0b11<sp/>&lt;&lt;<sp/>10<sp/>*<sp/>2)<sp/>|<sp/></highlight><highlight class="comment">/*<sp/>set<sp/>CP10<sp/>Full<sp/>Access<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0b11<sp/>&lt;&lt;<sp/>11<sp/>*<sp/>2));<sp/></highlight><highlight class="comment">/*<sp/>set<sp/>CP11<sp/>Full<sp/>Access<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classembed_1_1cortex__m_1_1system__control_1a398a6b79a1b5d8e53d48ad9dd6f86fe8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1system__control_1a398a6b79a1b5d8e53d48ad9dd6f86fe8" kindref="member">set_interrupt_vector_table_address</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p_table_location)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Relocate<sp/>the<sp/>interrupt<sp/>vector<sp/>table<sp/>the<sp/>vector<sp/>buffer.<sp/>By<sp/>default<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>set<sp/>to<sp/>the<sp/>address<sp/>of<sp/>the<sp/>start<sp/>of<sp/>flash<sp/>memory<sp/>for<sp/>the<sp/>MCU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classembed_1_1cortex__m_1_1system__control_1afdee24068c81f3c4b47849ae7f8db67b" kindref="member">scb</ref>()-&gt;vtor<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">intptr_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_table_location);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129" refid="classembed_1_1cortex__m_1_1system__control_1aa7e8c25387eb7bdb30438dcf3729346e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classembed_1_1cortex__m_1_1system__control_1aa7e8c25387eb7bdb30438dcf3729346e" kindref="member">get_interrupt_vector_table_address</ref>()</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Relocate<sp/>the<sp/>interrupt<sp/>vector<sp/>table<sp/>the<sp/>vector<sp/>buffer.<sp/>By<sp/>default<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>set<sp/>to<sp/>the<sp/>address<sp/>of<sp/>the<sp/>start<sp/>of<sp/>flash<sp/>memory<sp/>for<sp/>the<sp/>MCU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classembed_1_1cortex__m_1_1system__control_1afdee24068c81f3c4b47849ae7f8db67b" kindref="member">scb</ref>()-&gt;vtor);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>embed::cortex_m</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/github/workspace/include/libarmcortex/system_control.hpp"/>
  </compounddef>
</doxygen>
