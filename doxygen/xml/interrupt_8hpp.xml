<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="interrupt_8hpp" kind="file" language="C++">
    <compoundname>interrupt.hpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">array</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">span</includes>
    <includes local="no">utility</includes>
    <includes local="no">libembeddedhal/config.hpp</includes>
    <includes local="no">libembeddedhal/error.hpp</includes>
    <includes refid="system__control_8hpp" local="yes">system_control.hpp</includes>
    <includedby refid="systick__timer_8hpp" local="yes">/github/workspace/include/libarmcortex/systick_timer.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/github/workspace/include/libarmcortex/interrupt.hpp</label>
        <link refid="interrupt_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>system_control.hpp</label>
        <link refid="system__control_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>array</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="7">
        <label>libembeddedhal/config.hpp</label>
      </node>
      <node id="8">
        <label>libembeddedhal/error.hpp</label>
      </node>
      <node id="5">
        <label>span</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/github/workspace/include/libarmcortex/interrupt.hpp</label>
        <link refid="interrupt_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/github/workspace/include/libarmcortex/systick_timer.hpp</label>
        <link refid="systick__timer_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classembed_1_1cortex__m_1_1interrupt" prot="public">embed::cortex_m::interrupt</innerclass>
    <innerclass refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t" prot="public">embed::cortex_m::interrupt::nvic_register_t</innerclass>
    <innerclass refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t" prot="public">embed::cortex_m::interrupt::irq_t</innerclass>
    <innerclass refid="structembed_1_1cortex__m_1_1interrupt_1_1vector__table__not__initialized" prot="public">embed::cortex_m::interrupt::vector_table_not_initialized</innerclass>
    <innerclass refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq" prot="public">embed::cortex_m::interrupt::invalid_irq</innerclass>
    <innernamespace refid="namespaceembed">embed</innernamespace>
    <innernamespace refid="namespaceembed_1_1cortex__m">embed::cortex_m</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;span&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libembeddedhal/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libembeddedhal/error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system_control.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">embed::cortex_m<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="keyword">using<sp/></highlight><highlight class="normal">interrupt_pointer<sp/>=<sp/>void<sp/>(*)();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classembed_1_1cortex__m_1_1interrupt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classembed_1_1cortex__m_1_1interrupt" kindref="compound">interrupt</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t" kindref="compound">nvic_register_t</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="29" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1aee289569bf71d845ac677b8fd531b7eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;volatile<sp/>uint32_t,<sp/>8U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1aee289569bf71d845ac677b8fd531b7eb" kindref="member">iser</ref>;</highlight></codeline>
<codeline lineno="31" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a833140ef514a471a404a8d9d9daa0e91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;uint32_t,<sp/>24U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a833140ef514a471a404a8d9d9daa0e91" kindref="member">reserved0</ref>;</highlight></codeline>
<codeline lineno="33" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1aa5a5f8e248040065cec04189ce455ed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;volatile<sp/>uint32_t,<sp/>8U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1aa5a5f8e248040065cec04189ce455ed9" kindref="member">icer</ref>;</highlight></codeline>
<codeline lineno="35" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a9128b9073a97a7dc7be43fdb1b2978fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;uint32_t,<sp/>24U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a9128b9073a97a7dc7be43fdb1b2978fd" kindref="member">reserved1</ref>;</highlight></codeline>
<codeline lineno="37" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a06ee422b5f7e41eeeb7a1ff8a3cecc29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;volatile<sp/>uint32_t,<sp/>8U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a06ee422b5f7e41eeeb7a1ff8a3cecc29" kindref="member">ispr</ref>;</highlight></codeline>
<codeline lineno="39" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a4684852d23b22aafa23a75693872237f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;uint32_t,<sp/>24U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a4684852d23b22aafa23a75693872237f" kindref="member">reserved2</ref>;</highlight></codeline>
<codeline lineno="41" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a6fff278bd8b29d4f570dd7c22d3c3fd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;volatile<sp/>uint32_t,<sp/>8U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a6fff278bd8b29d4f570dd7c22d3c3fd7" kindref="member">icpr</ref>;</highlight></codeline>
<codeline lineno="43" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1adb460b8f957f6673eff570c762e245ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;uint32_t,<sp/>24U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1adb460b8f957f6673eff570c762e245ef" kindref="member">reserved3</ref>;</highlight></codeline>
<codeline lineno="45" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a620b3034752af6778cdac02dc5b82af8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;volatile<sp/>uint32_t,<sp/>8U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a620b3034752af6778cdac02dc5b82af8" kindref="member">iabr</ref>;</highlight></codeline>
<codeline lineno="47" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a3101beed3b6e9310363c1e5de8c38287" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;uint32_t,<sp/>56U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a3101beed3b6e9310363c1e5de8c38287" kindref="member">reserved4</ref>;</highlight></codeline>
<codeline lineno="49" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1ac106786641f02e945eb9f981811f0444" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;volatile<sp/>uint8_t,<sp/>240U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1ac106786641f02e945eb9f981811f0444" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="51" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a43bcd6665a16a576a3af233762287890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;uint32_t,<sp/>644U&gt;<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a43bcd6665a16a576a3af233762287890" kindref="member">reserved5</ref>;</highlight></codeline>
<codeline lineno="53" refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a69d3eed848e74aaa1664b382ec2244c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t_1a69d3eed848e74aaa1664b382ec2244c9" kindref="member">stir</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classembed_1_1cortex__m_1_1interrupt_1a004e94ae690d9878ad0f902b2ea30ce1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>intptr_t<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a004e94ae690d9878ad0f902b2ea30ce1" kindref="member">nvic_address</ref><sp/>=<sp/>0xE000&apos;E100UL;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classembed_1_1cortex__m_1_1interrupt_1a50c343dc9b05c5ae2ce2cd7dbed43809" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a50c343dc9b05c5ae2ce2cd7dbed43809" kindref="member">core_interrupts</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classembed_1_1cortex__m_1_1interrupt_1aeb4a534c7a7fb61a3530072a28e7b5fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1aeb4a534c7a7fb61a3530072a28e7b5fd" kindref="member">nvic</ref>()</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(embed::is_a_test())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t" kindref="compound">nvic_register_t</ref><sp/>dummy_nvic{};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;dummy_nvic;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1nvic__register__t" kindref="compound">nvic_register_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classembed_1_1cortex__m_1_1interrupt_1a004e94ae690d9878ad0f902b2ea30ce1" kindref="member">nvic_address</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classembed_1_1cortex__m_1_1interrupt_1ad04eb038f65e47f9c06e833ce80ea519" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::span&lt;interrupt_pointer&gt;<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1ad04eb038f65e47f9c06e833ce80ea519" kindref="member">vector_table</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t" kindref="compound">irq_t</ref></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a9a42c8a1e19ae81959d3e5b6a14d3c83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a9a42c8a1e19ae81959d3e5b6a14d3c83" kindref="member">irq_t</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_irq)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_irq(p_irq)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1ab18f730555987507c85107065ae09034" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1ab18f730555987507c85107065ae09034" kindref="member">irq_t</ref>(<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t" kindref="compound">irq_t</ref>&amp;<sp/>p_irq)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_irq(p_irq.m_irq)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1ae000c8ed6617135d949735d9c9af9ef0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t" kindref="compound">irq_t</ref>&amp;<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1ae000c8ed6617135d949735d9c9af9ef0" kindref="member">operator=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_irq)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_irq<sp/>=<sp/>p_irq;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1ab716fe8a7fae365857780eacfcd93a5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1ab716fe8a7fae365857780eacfcd93a5a" kindref="member">index_position</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a2e681128f946eef3d98b84d6947cdb3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a2e681128f946eef3d98b84d6947cdb3c" kindref="member">enable_mask_code</ref><sp/>=<sp/>0x1F;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a636de808a58ee07ec720dd7f8cb1a73d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a636de808a58ee07ec720dd7f8cb1a73d" kindref="member">default_enabled</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_irq<sp/>&lt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a21d9e7361018571b5f34433e88c0e0fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a21d9e7361018571b5f34433e88c0e0fc" kindref="member">register_index</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="143"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_irq<sp/>&gt;&gt;<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1ab716fe8a7fae365857780eacfcd93a5a" kindref="member">index_position</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a13e6ea3a6aca86620c9cf089e22985a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a13e6ea3a6aca86620c9cf089e22985a4" kindref="member">enable_mask</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="152"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1U<sp/>&lt;&lt;<sp/>(m_irq<sp/>&amp;<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a2e681128f946eef3d98b84d6947cdb3c" kindref="member">enable_mask_code</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a3d9a6215a0360e8539897c01214e9555" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a3d9a6215a0360e8539897c01214e9555" kindref="member">vector_index</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="161"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_irq<sp/>+<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a50c343dc9b05c5ae2ce2cd7dbed43809" kindref="member">core_interrupts</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a566f0cf5c1cf368e6da029c4260f9a5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a566f0cf5c1cf368e6da029c4260f9a5b" kindref="member">is_valid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="172"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>table_size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classembed_1_1cortex__m_1_1interrupt_1ad04eb038f65e47f9c06e833ce80ea519" kindref="member">vector_table</ref>.size());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_irq<sp/>=<sp/>table_size<sp/>-<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a50c343dc9b05c5ae2ce2cd7dbed43809" kindref="member">core_interrupts</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::cmp_greater(m_irq,<sp/>-<ref refid="classembed_1_1cortex__m_1_1interrupt_1a50c343dc9b05c5ae2ce2cd7dbed43809" kindref="member">core_interrupts</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cmp_less(m_irq,<sp/>last_irq);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181" refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a19b81fd62b8e08244701ff3cd0904638" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a19b81fd62b8e08244701ff3cd0904638" kindref="member">get_irq_number</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_irq;<sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_irq<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="structembed_1_1cortex__m_1_1interrupt_1_1vector__table__not__initialized" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1vector__table__not__initialized" kindref="compound">vector_table_not_initialized</ref></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq" kindref="compound">invalid_irq</ref></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="212" refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1a63fe1219b0c3b9f6eaa2bfbc4b61ab2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1a63fe1219b0c3b9f6eaa2bfbc4b61ab2a" kindref="member">begin</ref><sp/>=<sp/>-<ref refid="classembed_1_1cortex__m_1_1interrupt_1a50c343dc9b05c5ae2ce2cd7dbed43809" kindref="member">core_interrupts</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1a009955585de9474c648a40e7cbc2830e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1a009955585de9474c648a40e7cbc2830e" kindref="member">invalid_irq</ref>(<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t" kindref="compound">irq_t</ref><sp/>p_irq)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1a0da5c8e1c32aa08bb8841f7e912eba47" kindref="member">invalid</ref>{}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1ae74e0c9710c1a8c5011fb2c84eff94fc" kindref="member">end</ref>{}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1a0da5c8e1c32aa08bb8841f7e912eba47" kindref="member">invalid</ref><sp/>=<sp/>p_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a19b81fd62b8e08244701ff3cd0904638" kindref="member">get_irq_number</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>table_size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classembed_1_1cortex__m_1_1interrupt_1ad04eb038f65e47f9c06e833ce80ea519" kindref="member">vector_table</ref>.size());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1ae74e0c9710c1a8c5011fb2c84eff94fc" kindref="member">end</ref><sp/>=<sp/>table_size<sp/>-<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a50c343dc9b05c5ae2ce2cd7dbed43809" kindref="member">core_interrupts</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1a0da5c8e1c32aa08bb8841f7e912eba47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1a0da5c8e1c32aa08bb8841f7e912eba47" kindref="member">invalid</ref>{};</highlight></codeline>
<codeline lineno="231" refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1ae74e0c9710c1a8c5011fb2c84eff94fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structembed_1_1cortex__m_1_1interrupt_1_1invalid__irq_1ae74e0c9710c1a8c5011fb2c84eff94fc" kindref="member">end</ref>{};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="classembed_1_1cortex__m_1_1interrupt_1a6d1ba6aadcded48be3ed27d293d65779" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a6d1ba6aadcded48be3ed27d293d65779" kindref="member">nop</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>VectorCount&gt;</highlight></codeline>
<codeline lineno="262" refid="classembed_1_1cortex__m_1_1interrupt_1a295015f5b14cb95d7e7908e3ab18ce1f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a295015f5b14cb95d7e7908e3ab18ce1f" kindref="member">initialize</ref>()</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Statically<sp/>allocate<sp/>a<sp/>buffer<sp/>of<sp/>vectors<sp/>to<sp/>be<sp/>used<sp/>as<sp/>the<sp/>new<sp/>IVT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_vector_count<sp/>=<sp/>VectorCount<sp/>+<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a50c343dc9b05c5ae2ce2cd7dbed43809" kindref="member">core_interrupts</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(512)<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::array&lt;interrupt_pointer,<sp/>total_vector_count&gt;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector_buffer{};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classembed_1_1cortex__m_1_1system__control" kindref="compound">system_control</ref>().<ref refid="classembed_1_1cortex__m_1_1system__control_1aa7e8c25387eb7bdb30438dcf3729346e" kindref="member">get_interrupt_vector_table_address</ref>()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>statically<sp/>allocated<sp/>vector<sp/>within<sp/>this<sp/>scope<sp/>to<sp/>the<sp/>global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vector_table<sp/>span<sp/>so<sp/>that<sp/>it<sp/>can<sp/>be<sp/>accessed<sp/>in<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>functions.<sp/>This<sp/>is<sp/>valid<sp/>because<sp/>the<sp/>interrupt<sp/>vector<sp/>table<sp/>has<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>storage<sp/>duration<sp/>and<sp/>will<sp/>exist<sp/>throughout<sp/>the<sp/>duration<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1ad04eb038f65e47f9c06e833ce80ea519" kindref="member">vector_table</ref><sp/>=<sp/>vector_buffer;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>fill<sp/>the<sp/>interrupt<sp/>handler<sp/>and<sp/>vector<sp/>table<sp/>with<sp/>a<sp/>function<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(vector_buffer.begin(),<sp/>vector_buffer.end(),<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a6d1ba6aadcded48be3ed27d293d65779" kindref="member">nop</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Relocate<sp/>the<sp/>interrupt<sp/>vector<sp/>table<sp/>the<sp/>vector<sp/>buffer.<sp/>By<sp/>default<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>set<sp/>to<sp/>the<sp/>address<sp/>of<sp/>the<sp/>start<sp/>of<sp/>flash<sp/>memory<sp/>for<sp/>the<sp/>MCU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classembed_1_1cortex__m_1_1system__control" kindref="compound">system_control</ref>().<ref refid="classembed_1_1cortex__m_1_1system__control_1a398a6b79a1b5d8e53d48ad9dd6f86fe8" kindref="member">set_interrupt_vector_table_address</ref>(vector_buffer.data());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>VectorCount&gt;</highlight></codeline>
<codeline lineno="297" refid="classembed_1_1cortex__m_1_1interrupt_1a41b0b48496b94c484b017e7369a5fc51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a41b0b48496b94c484b017e7369a5fc51" kindref="member">reinitialize</ref>()</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>all<sp/>bits<sp/>in<sp/>the<sp/>interrupt<sp/>clear<sp/>register<sp/>to<sp/>1s<sp/>to<sp/>disable<sp/>those</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interrupt<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>clear_interrupt<sp/>:<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1aeb4a534c7a7fb61a3530072a28e7b5fd" kindref="member">nvic</ref>()-&gt;icer)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clear_interrupt<sp/>=<sp/>0xFFFF&apos;FFFF;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(embed::is_a_test())<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>set_interrupt<sp/>:<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1aeb4a534c7a7fb61a3530072a28e7b5fd" kindref="member">nvic</ref>()-&gt;iser)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_interrupt<sp/>=<sp/>0x0000&apos;0000;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>clear_interrupt<sp/>:<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1aeb4a534c7a7fb61a3530072a28e7b5fd" kindref="member">nvic</ref>()-&gt;icer)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear_interrupt<sp/>=<sp/>0x0000&apos;0000;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classembed_1_1cortex__m_1_1system__control" kindref="compound">system_control</ref>().<ref refid="classembed_1_1cortex__m_1_1system__control_1a398a6b79a1b5d8e53d48ad9dd6f86fe8" kindref="member">set_interrupt_vector_table_address</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>initialize&lt;VectorCount&gt;();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="classembed_1_1cortex__m_1_1interrupt_1a3e06e906d013303f1564f0e1c3605c3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a3e06e906d013303f1564f0e1c3605c3e" kindref="member">get_vector_table</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1ad04eb038f65e47f9c06e833ce80ea519" kindref="member">vector_table</ref>;<sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="classembed_1_1cortex__m_1_1interrupt_1ae9dcee8373ecb40df26c777a1074e8ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1ae9dcee8373ecb40df26c777a1074e8ca" kindref="member">interrupt</ref>(<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t" kindref="compound">irq_t</ref><sp/>p_irq)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_irq(p_irq)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="classembed_1_1cortex__m_1_1interrupt_1ac46bd0a4ca050a8d41c394a1080f52bb" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>boost::leaf::result&lt;void&gt;<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1ac46bd0a4ca050a8d41c394a1080f52bb" kindref="member">enable</ref>(interrupt_pointer<sp/>p_handler)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_LEAF_CHECK(sanity_check());</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1ad04eb038f65e47f9c06e833ce80ea519" kindref="member">vector_table</ref>[m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a3d9a6215a0360e8539897c01214e9555" kindref="member">vector_index</ref>()]<sp/>=<sp/>p_handler;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a636de808a58ee07ec720dd7f8cb1a73d" kindref="member">default_enabled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nvic_enable_irq();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classembed_1_1cortex__m_1_1interrupt_1a2b5b1eb8840c207b941f456657a49b8e" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>boost::leaf::result&lt;void&gt;<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a2b5b1eb8840c207b941f456657a49b8e" kindref="member">disable</ref>()</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_LEAF_CHECK(sanity_check());</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1ad04eb038f65e47f9c06e833ce80ea519" kindref="member">vector_table</ref>[m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a3d9a6215a0360e8539897c01214e9555" kindref="member">vector_index</ref>()]<sp/>=<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1a6d1ba6aadcded48be3ed27d293d65779" kindref="member">nop</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a636de808a58ee07ec720dd7f8cb1a73d" kindref="member">default_enabled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nvic_disable_irq();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="classembed_1_1cortex__m_1_1interrupt_1af79ed42515f4ae295fe2410fd8a7e46c" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>boost::leaf::result&lt;bool&gt;<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1af79ed42515f4ae295fe2410fd8a7e46c" kindref="member">verify_vector_enabled</ref>(</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>interrupt_pointer<sp/>p_handler)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_LEAF_CHECK(sanity_check());</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>handler<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>irq_handler<sp/>=<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1ad04eb038f65e47f9c06e833ce80ea519" kindref="member">vector_table</ref>[m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a3d9a6215a0360e8539897c01214e9555" kindref="member">vector_index</ref>()];</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>handlers_are_the_same<sp/>=<sp/>(irq_handler<sp/>==<sp/>p_handler);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!handlers_are_the_same)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a636de808a58ee07ec720dd7f8cb1a73d" kindref="member">default_enabled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>enable_register<sp/>=<sp/><ref refid="classembed_1_1cortex__m_1_1interrupt_1aeb4a534c7a7fb61a3530072a28e7b5fd" kindref="member">nvic</ref>()-&gt;iser.at(m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a21d9e7361018571b5f34433e88c0e0fc" kindref="member">register_index</ref>());</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(enable_register<sp/>&amp;<sp/>m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a13e6ea3a6aca86620c9cf089e22985a4" kindref="member">enable_mask</ref>())<sp/>==<sp/>0U;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>boost::leaf::result&lt;void&gt;<sp/>sanity_check()</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vector_table_is_initialized())<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::leaf::new_error(vector_table_not_initialized{});</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a566f0cf5c1cf368e6da029c4260f9a5b" kindref="member">is_valid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::leaf::new_error(invalid_irq(m_irq));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vector_table_is_initialized()</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>system_control().get_interrupt_vector_table_address()<sp/>!=<sp/>0x0000&apos;0000;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nvic_enable_irq()</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>interrupt_enable<sp/>=<sp/>&amp;<ref refid="classembed_1_1cortex__m_1_1interrupt_1aeb4a534c7a7fb61a3530072a28e7b5fd" kindref="member">nvic</ref>()-&gt;iser.at(m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a21d9e7361018571b5f34433e88c0e0fc" kindref="member">register_index</ref>());</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>*interrupt_enable<sp/>=<sp/>m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a13e6ea3a6aca86620c9cf089e22985a4" kindref="member">enable_mask</ref>();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nvic_disable_irq()</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>interrupt_clear<sp/>=<sp/>&amp;<ref refid="classembed_1_1cortex__m_1_1interrupt_1aeb4a534c7a7fb61a3530072a28e7b5fd" kindref="member">nvic</ref>()-&gt;icer.at(m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a21d9e7361018571b5f34433e88c0e0fc" kindref="member">register_index</ref>());</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>*interrupt_clear<sp/>=<sp/>m_irq.<ref refid="classembed_1_1cortex__m_1_1interrupt_1_1irq__t_1a13e6ea3a6aca86620c9cf089e22985a4" kindref="member">enable_mask</ref>();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>irq_t<sp/>m_irq;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">};</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>embed::cortex_m</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/github/workspace/include/libarmcortex/interrupt.hpp"/>
  </compounddef>
</doxygen>
